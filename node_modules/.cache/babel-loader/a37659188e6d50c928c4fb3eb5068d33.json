{"ast":null,"code":"var _jsxFileName = \"D:\\\\Training\\\\my-app\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction PostControlPanel(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.addPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Add Post\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.removePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, \"Remove Post\"));\n}\n\nfunction AddPostPanel(props) {\n  const objTitle = React.createRef();\n  const objContent = React.createRef();\n  const fileUploader = React.createRef();\n  const [imgSelected, setImgSelected] = React.useState(null);\n\n  function uploadImage() {\n    console.log(\"Upload Image\");\n    fileUploader.current.click();\n  }\n\n  function submitPost() {\n    console.log(\"Submit Post\");\n    props.callback(objTitle.current.value, objContent.current.value, imgSelected);\n  }\n\n  function fileSelected() {\n    if (undefined === fileUploader.current.files[0]) {\n      console.log(\"Did not select file, do nothing\");\n    } else {\n      console.log(\"File selected: \" + fileUploader.current.files[0].name);\n      setImgSelected(URL.createObjectURL(fileUploader.current.files[0]));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"selectdFile\",\n    onChange: fileSelected,\n    ref: fileUploader,\n    accept: \"image/*\",\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"Add-Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: objTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"Add-Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Content:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Please input Content.\",\n    ref: objContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), imgSelected && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"Add-Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }\n  }, \"Image Preview:\"), imgSelected && /*#__PURE__*/React.createElement(\"img\", {\n    src: imgSelected,\n    alt: \"Preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Add-Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: uploadImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"upload\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submitPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"submit\")));\n}\n\nfunction App() {\n  const [isAddingPost, setIsAddingPost] = useState(false);\n  const [listPostInfo, setListPostInfo] = useState([]);\n  var lastPostTimestamp = null;\n\n  function addPost() {\n    console.log(\"Add Post\");\n    setIsAddingPost(true);\n  }\n\n  function removePost() {\n    if (lastPostTimestamp) {\n      console.log(\"Remove Post timestamp: \" + lastPostTimestamp);\n      setListPostInfo(listPostInfo.filter(item => item.id !== lastPostTimestamp));\n    } else {\n      console.log(\"List of post is empty, do nothing.\");\n      return;\n    }\n\n    if (0 === listPostInfo.length) lastPostTimestamp = null;else {\n      lastPostTimestamp = listPostInfo[listPostInfo.length - 1]['id'];\n    }\n    console.log(\"Update last post timestamp to \" + lastPostTimestamp);\n  }\n\n  function submitPostCallBack(strTitle, strContent, imgFile) {\n    lastPostTimestamp = new Date().getUTCMilliseconds();\n    setListPostInfo(listPostInfo.push({\n      \"id\": lastPostTimestamp,\n      \"title\": strTitle,\n      \"content\": strContent,\n      \"image\": imgFile\n    }));\n    setIsAddingPost(false);\n    console.log(listPostInfo);\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, isAddingPost ? /*#__PURE__*/React.createElement(AddPostPanel, {\n    callback: submitPostCallBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }) : /*#__PURE__*/React.createElement(PostControlPanel, {\n    addPost: addPost,\n    removePost: removePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Training/my-app/src/App.js"],"names":["React","useState","PostControlPanel","props","addPost","removePost","AddPostPanel","objTitle","createRef","objContent","fileUploader","imgSelected","setImgSelected","uploadImage","console","log","current","click","submitPost","callback","value","fileSelected","undefined","files","name","URL","createObjectURL","display","App","isAddingPost","setIsAddingPost","listPostInfo","setListPostInfo","lastPostTimestamp","filter","item","id","length","submitPostCallBack","strTitle","strContent","imgFile","Date","getUTCMilliseconds","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n\nfunction PostControlPanel(props) {\n    return (\n    <div>\n      <button onClick={props.addPost}>Add Post</button>\n      <button onClick={props.removePost}>Remove Post</button>\n    </div>\n    );\n}\n\nfunction AddPostPanel(props) {\n  const objTitle = React.createRef();\n  const objContent = React.createRef();\n  const fileUploader = React.createRef();\n  const [imgSelected, setImgSelected] = React.useState(null);\n\n  function uploadImage() { \n    console.log(\"Upload Image\"); \n    fileUploader.current.click();\n  }\n\n  function submitPost() { \n    console.log(\"Submit Post\"); \n    props.callback(objTitle.current.value, objContent.current.value, imgSelected);\n  }\n\n  function fileSelected() {\n    if (undefined === fileUploader.current.files[0]) {\n      console.log(\"Did not select file, do nothing\");\n    }\n    else {\n      console.log(\"File selected: \" + fileUploader.current.files[0].name);\n      setImgSelected(URL.createObjectURL(fileUploader.current.files[0]));\n    }\n  }\n\n  return (\n    <div>\n      <input type=\"file\" id=\"selectdFile\" onChange={fileSelected} ref={fileUploader} accept=\"image/*\" style={{display:'none'}}></input>\n      <span className=\"Add-Post\">Title:</span>\n      <input ref={objTitle}></input>\n      <span className=\"Add-Post\">Content:</span>\n      <textarea placeholder=\"Please input Content.\" ref={objContent}></textarea>\n      {imgSelected && <span className=\"Add-Post\">Image Preview:</span>}\n      {imgSelected && <img src={imgSelected} alt=\"Preview\"></img>}\n        \n      <div className=\"Add-Post\">\n        <button onClick={uploadImage}>upload</button>\n        <button onClick={submitPost}>submit</button>\n      </div>\n    </div>\n    );\n}\n\nfunction App() {\n  const [isAddingPost, setIsAddingPost] = useState(false);\n  const [listPostInfo, setListPostInfo] = useState([]);\n  var lastPostTimestamp = null;\n\n  function addPost() {\n    console.log(\"Add Post\");\n    setIsAddingPost(true);\n  }\n\n  function removePost() { \n    \n    if(lastPostTimestamp) {\n      console.log(\"Remove Post timestamp: \" + lastPostTimestamp); \n      setListPostInfo(listPostInfo.filter(item => item.id !== lastPostTimestamp));\n    }\n    else {\n      console.log(\"List of post is empty, do nothing.\");\n      return;\n    }\n\n    if(0 === listPostInfo.length)\n      lastPostTimestamp = null;\n    else {\n      lastPostTimestamp = listPostInfo[listPostInfo.length - 1]['id'];\n    }\n    console.log(\"Update last post timestamp to \" + lastPostTimestamp);\n  }\n\n  function submitPostCallBack(strTitle, strContent, imgFile) {\n    lastPostTimestamp = new Date().getUTCMilliseconds();\n    setListPostInfo(listPostInfo.push({\n      \"id\": lastPostTimestamp,\n      \"title\": strTitle,\n      \"content\": strContent,\n      \"image\": imgFile\n    }));\n    setIsAddingPost(false);\n    console.log(listPostInfo);\n  };\n\n  return (\n    <div className=\"App\"> \n    {\n    isAddingPost\n    ? <AddPostPanel callback={submitPostCallBack}/>\n    : <PostControlPanel addPost={addPost} removePost={removePost}/>\n    }\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}